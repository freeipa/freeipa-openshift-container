# Predefined variables for github:
# https://docs.github.com/en/free-pro-team@latest/actions/reference/environment-variables#default-environment-variables

# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#name
name: Build container images

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'

jobs:
  test-unit:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Run Unit Tests
        run: |
          ./test/libs/bats/bin/bats ./test/unit/*.bats

  build:
    name: Build Images
    runs-on: ubuntu-20.04
    needs: [ test-unit ]
    steps:
      - uses: actions/checkout@v2

      - name: Get tags
        id: getParams
        run: |
          cat PARENT_IMG
          echo ::set-output name=PARENT_IMG::$(grep -v "^#" PARENT_IMG)
          case "${GITHUB_REF}" in
            "refs/heads/main" )
              echo ::set-output name=TAGS::latest
              echo ::set-output name=QUAY_EXPIRATION::never
              ;;
            "refs/tags/v*" )
              echo ::set-output name=TAGS::$(echo $GITHUB_REF | cut -d / -f 3) $(git rev-parse --short HEAD)
              echo ::set-output name=QUAY_EXPIRATION::never
              ;;
            * )
              echo ::set-output name=TAGS::$(git rev-parse --short HEAD)
              echo ::set-output name=QUAY_EXPIRATION::2w
              ;;
          esac

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: freeipa-openshift-container
          tags: ${{ steps.getParams.outputs.TAGS }}
          dockerfiles: |
            ./Dockerfile
          build-args: |
            PARENT_IMG=${{ steps.getParams.outputs.PARENT_IMG }}
            QUAY_EXPIRATION=${{ steps.getParams.outputs.QUAY_EXPIRATION }}

      - name: Push To quay.io
        if: github.event_name != 'pull-request'
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ secrets.REGISTRY_SCOPE }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Print image url
        if: github.event_name != 'pull-request'
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
